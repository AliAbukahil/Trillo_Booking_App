.container {
  max-width: 120rem; // 1200px
  margin: 18rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);

  min-height: 50rem;

  @media only screen and (max-width: $breakPoint-largest) {
    margin: 0;
    max-width: 100%;
    width: 100%;
  }
}

.header {
  font-size: 1.4rem;
  height: 7rem; // 70px
  background-color: #fff;
  border-bottom: var(--line);

  display: flex;
  justify-content: space-between;
  align-items: center;

  @media only screen and (max-width: $breakPoint-smallest) {
    flex-wrap: wrap;
    align-content: space-around;
    height: 11rem;
  }
}

.content {
  display: flex;

  @media only screen and (max-width: $breakPoint-medium) {
    flex-direction: column;
  }
}

.sidebar {
  background-color: var(--color-grey-dark-1);
  // flex: grow shrink basis; basis is like width
  flex: 0 0 18%;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.hotel-view {
  background-color: #fff;

  // flex: 1; the element should grow as much as it can.
  flex: 1;
}

.detail {
  font-size: 1.4rem;
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);

  @media only screen and (max-width: $breakPoint-medium) {
    padding: 3rem;
  }

  @media only screen and (max-width: $breakPoint-small) {
    flex-direction: column;
  }
}

.description {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  // grow 0 shrink 0 60% flex basis
  flex: 0 0 60%;
  padding: 3rem;
  margin-right: 4.5rem;

  // When you have two Media Queries the
  // larger screen before small screen NOT the otherwise, Why? Because if there are going to be some conflicting styles we want the last one to be applied. ðŸ˜¬
  @media only screen and (max-width: $breakPoint-medium) {
    padding: 2rem;
    margin-right: 3rem;
  }

  @media only screen and (max-width: $breakPoint-small) {
    margin-right: 0rem;
    margin-bottom: 3rem;
  }
}

.user-reviews {
  flex: 1; // with flex 1 this div will occupy the remaining space after the .description div has taken the its 60% space
  display: flex;
  flex-direction: column;
  align-items: center;
}
